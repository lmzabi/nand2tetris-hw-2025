// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM16K.hdl
/**
 * Memory of 16K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in= load, sel= address[11..13], a= i1, b= i2, c= i3, d= i4, e= i5, f= i6, g= i7, h= i8);
    RAM4K(in= in, load= i1, address= address[0..11], out= aout);
    RAM4K(in= in, load= i2, address= address[0..11], out= bout);
    RAM4K(in= in, load= i3, address= address[0..11], out= cout);
    RAM4K(in= in, load= i4, address= address[0..11], out= dout);
    RAM4K(in= in, load= i5, address= address[0..11], out= eout);
    RAM4K(in= in, load= i6, address= address[0..11], out= fout);
    RAM4K(in= in, load= i7, address= address[0..11], out= gout);
    RAM4K(in= in, load= i8, address= address[0..11], out= hout);
    Mux8Way16(a= aout, b= bout, c= cout, d= dout, e= eout, f= fout, g= gout, h= hout, sel= address[11..13], out= out);

}