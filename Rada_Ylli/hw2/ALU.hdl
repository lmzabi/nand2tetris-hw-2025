// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
    IN  x[16], y[16],
        zx, nx, zy, ny, f, no;
    OUT out[16], zr, ng;

   PARTS:

    Mux16(a=x, b[0..15]= false , sel =zx , out=muxx );
    Not16(in=muxx, out=nmuxx );
    Mux16(a=muxx, b = nmuxx, sel =nx ,out = xprime );

    Mux16(a=y, b[0..15] = false , sel=zy , out=muxy );
    Not16(in=muxy, out=nmuxy);
    Mux16(a=muxy, b=nmuxy, sel=ny, out=yprime);

    And16(a=xprime, b=yprime , out=result1);
    Add16(a=xprime, b=yprime, out=result2);
    Mux16( a=result1, b=result2, sel=f, out=outf);
    Not16(in=outf, out=notout);
    Mux16( a=outf, b=notout, sel=no, out=out , out[15]=ng, out[0..7]=zr1, out[8..15] = zr2 );

    Or8Way(in=zr1, out=finalresult);
    Or8Way(in=zr2, out=finalresult2);  

    Or(a=finalresult, b=finalresult2, out=finalresult3);
    Not(in=finalresult3, out=zr);
   
}

